{"version":3,"file":"static/js/316.0a3c860b.chunk.js","mappings":"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","sources":["webpack://wallet-reactor/./src/components/HomeTab/HomeTab.module.scss?60d0","redux/transactionCategories/transactionCategoriesSelectors.js","assets/lang/langOptionsHomeTab.js","components/HomeTab/HomeTab.jsx","components/ButtonAddTransactions/ButtonAddTransactions.jsx","webpack://wallet-reactor/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","webpack://wallet-reactor/./src/components/ModalAddTransaction/FormAddTransaction.module.scss?e07b","assets/lang/langOptionsModalAddTransaction.js","components/ModalAddTransaction/ModalAddTransaction.jsx","hook/modalAddTransaction.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tableWrap\":\"HomeTab_tableWrap__wldLt\",\"scrollTableBody\":\"HomeTab_scrollTableBody__k4rOg\",\"scrollTable\":\"HomeTab_scrollTable__e2cbs\",\"tableWrapMob\":\"HomeTab_tableWrapMob__7DKqt\",\"scrollTableBodyMob\":\"HomeTab_scrollTableBodyMob__+X8ln\",\"scrollTableMob\":\"HomeTab_scrollTableMob__avbAf\",\"tablePositive\":\"HomeTab_tablePositive__06bCy\",\"positive\":\"HomeTab_positive__mmZ63\",\"negative\":\"HomeTab_negative__pTkgl\"};","export const selectTransactionCategories = state =>\n  state.transactionCategories.items;\nexport const selectTransactionIsLoading = state =>\n  state.transactionCategories.isLoading;\n","export const langOptionsHomeTab = {\n  DataText: {\n    ua: \"Дата\",\n    en: \"Data\",\n  },\n  TypeText: {\n    ua: \"Тип\",\n    en: \"Type\",\n  },\n  CategoryText: {\n    ua: \"Категорiя\",\n    en: \"Category\",\n  },\n  CommentText: {\n    ua: \"Коментар\",\n    en: \"Comment\",\n  },\n  SumText: {\n    ua: \"Сума\",\n    en: \"Sum\",\n  },\n  BalanceText: {\n    ua: \"Баланс\",\n    en: \"Balance\",\n  },\n  NoTransactionsText: {\n    ua: \"Немає транзакцiй\",\n    en: \"No transactions\",\n  },\n};\n","import { useSelector } from 'react-redux';\nimport s from './HomeTab.module.scss';\nimport { selectTransactions } from 'redux/transactions/transactionsSelectors';\nimport { useMedia } from 'react-use';\nimport { selectTransactionCategories } from 'redux/transactionCategories/transactionCategoriesSelectors';\nimport { getLang } from 'redux/lang/langSelector';\nimport { langOptionsHomeTab } from '../../assets/lang/langOptionsHomeTab';\n\nexport const HomeTab = () => {\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n  const categoriesList = categories.map(data => data);\n  const isMobile = useMedia('(max-width: 767px)');\n  const isLaptop = useMedia('(min-width: 768px)');\n  const transactionsReverse = [...transactions];\n\n  const lang = useSelector(getLang);\n  const {\n    DataText,\n    TypeText,\n    CategoryText,\n    CommentText,\n    SumText,\n    BalanceText,\n    NoTransactionsText,\n  } = langOptionsHomeTab;\n\n  return (\n    <>\n      {isMobile && (\n        <div className={s.tableWrapMob}>\n          <div className={s.scrollTableMob}>\n            <div className={s.scrollTableBodyMob}>\n              {transactions.length !== 0 ? (\n                transactionsReverse.map(el => (\n                  <table\n                    className={\n                      el.amount > 0 ? s.tablePositive : s.tableNegative\n                    }\n                    key={el.id}\n                  >\n                    <tbody>\n                      <tr>\n                        <td>{DataText[lang]}</td>\n                        <td>{el.transactionDate}</td>\n                      </tr>\n                      <tr>\n                        <td>{TypeText[lang]}</td>\n                        <td>{el.type !== 'EXPENSE' ? '+' : '-'}</td>\n                      </tr>\n\n                      <tr>\n                        <td>{CategoryText[lang]}</td>\n                        <td>\n                          {categoriesList.length &&\n                            categoriesList.find(cat => cat.id === el.categoryId)\n                              .name}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>{CommentText[lang]}</td>\n                        <td>{el.comment}</td>\n                      </tr>\n                      <tr>\n                        <td>{SumText[lang]}</td>\n                        <td className={el.amount > 0 ? s.positive : s.negative}>\n                          {el.amount}\n                        </td>\n                      </tr>\n                      <tr>\n                        <td>{BalanceText[lang]}</td>\n                        <td>{el.balanceAfter}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                ))\n              ) : (\n                <p>{NoTransactionsText[lang]}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isLaptop && (\n        <div className={s.tableWrap}>\n          <div className={s.scrollTable}>\n            <table>\n              <thead>\n                <tr>\n                  <th>{DataText[lang]}</th>\n                  <th>{TypeText[lang]}</th>\n                  <th>{CategoryText[lang]}</th>\n                  <th>{CommentText[lang]}</th>\n                  <th>{SumText[lang]}</th>\n                  <th>{BalanceText[lang]}</th>\n                </tr>\n              </thead>\n            </table>\n\n            <div className={s.scrollTableBody}>\n              <table>\n                <tbody>\n                  {transactions.length ? (\n                    transactionsReverse.map(el => (\n                      <tr key={el.id}>\n                        <td>{el.transactionDate}</td>\n                        <td>{el.type !== 'EXPENSE' ? '+' : '-'}</td>\n                        <td>\n                          {categoriesList.length &&\n                            categoriesList.find(cat => cat.id === el.categoryId)\n                              .name}\n                        </td>\n                        <td>{el.comment}</td>\n                        <td className={el.amount > 0 ? s.positive : s.negative}>\n                          {el.amount}\n                        </td>\n                        <td>{el.balanceAfter}</td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td>{NoTransactionsText[lang]}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","export const ButtonAddTransactions = ({ onModalOpen }) => {\n  return (\n    <>\n      <button onClick={onModalOpen} type=\"button\">\n        Button Add Transactions\n      </button>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"ModalAddTransaction_Overlay__vLRSS\",\"Modal\":\"ModalAddTransaction_Modal__TxV0p\",\"loadedBloc\":\"ModalAddTransaction_loadedBloc__HOgXM\",\"loadedNone\":\"ModalAddTransaction_loadedNone__ufcKr\",\"container\":\"ModalAddTransaction_container__ctH3d\",\"hiddenInput\":\"ModalAddTransaction_hiddenInput__5li1C\",\"thumbContainer\":\"ModalAddTransaction_thumbContainer__vmn7-\",\"thumb\":\"ModalAddTransaction_thumb__m-wAw\",\"track\":\"ModalAddTransaction_track__ssBX2\"};","// extracted by mini-css-extract-plugin\nexport default {\"errorMessage\":\"FormAddTransaction_errorMessage__e0xpI\",\"titleForm\":\"FormAddTransaction_titleForm__IC8ko\",\"wraperSwitch\":\"FormAddTransaction_wraperSwitch__3mtec\",\"selectType\":\"FormAddTransaction_selectType__cZDI0\",\"selectTypeOption\":\"FormAddTransaction_selectTypeOption__zKC5G\",\"wraperAmountDate\":\"FormAddTransaction_wraperAmountDate__OOS4P\",\"inputAmount\":\"FormAddTransaction_inputAmount__63lHt\",\"inputDate\":\"FormAddTransaction_inputDate__tfEr3\",\"commentLabel\":\"FormAddTransaction_commentLabel__sShDm\",\"inputComment\":\"FormAddTransaction_inputComment__o60CH\",\"btnWraper\":\"FormAddTransaction_btnWraper__+vpSj\",\"btnAdd\":\"FormAddTransaction_btnAdd__2bF93\",\"btnCancel\":\"FormAddTransaction_btnCancel__L90Nx\",\"selectWraper\":\"FormAddTransaction_selectWraper__qzymS\",\"optionCustomWriper\":\"FormAddTransaction_optionCustomWriper__DvYLe\",\"selectCustom\":\"FormAddTransaction_selectCustom__6vGV2\",\"selectListWraper\":\"FormAddTransaction_selectListWraper__ePJo1\",\"selectLabel\":\"FormAddTransaction_selectLabel__RbdGb\",\"selectOptionItem\":\"FormAddTransaction_selectOptionItem__azR2X\"};","export const langOptionsModalAddTransaction = {\n  AddTransactionText: {\n    ua: \"Додати трансакцiю\",\n    en: \"Add transaction\",\n  },\n  CommentText: {\n    ua: \"Коментар\",\n    en: \"Comment\",\n  },\n  AddText: {\n    ua: \"Додати\",\n    en: \"ADD\",\n  },\n  CancelText: {\n    ua: \"Вiдмiнити\",\n    en: \"CANCEL\",\n  },\n};\n","//import PropTypes from 'prop-types';\nimport { authOperations } from 'redux/auth';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors } from 'redux/auth';\nimport { addTransaction } from 'redux/transactions/transactionsOperations';\nimport { selectTransactionCategories } from 'redux/transactionCategories/transactionCategoriesSelectors';\n\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\nimport moment from 'moment';\n\nimport { fetchTransactionCategories } from 'redux/transactionCategories/transactionCategoriesOperations';\n\nimport { useToggle } from '../../hook/modalAddTransaction';\n\nimport css from './ModalAddTransaction.module.scss';\nimport cssForm from './FormAddTransaction.module.scss';\n\nimport { getLang } from 'redux/lang/langSelector';\nimport { langOptionsModalAddTransaction } from '../../assets/lang/langOptionsModalAddTransaction';\n\nexport const ModalAddTransaction = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n  const balance = useSelector(authSelectors.selectBalance);\n  const { isShowSelect, toggleHook } = useToggle();\n  // const { isShowSelect, show, hide, toggleHook } = useToggle();\n\n  // const [toggle, setToggle] = useState('');\n  const [amount, setAmount] = useState('');\n  const [valueDate, onChange] = useState(new Date());\n  const [transactionDate, setTransactionDate] = useState(\n    moment(valueDate).format()\n  );\n  const [comment, setComment] = useState('');\n  const [type, setType] = useState('INCOME');\n  const [categoryId, setCategoryId] = useState(\n    '063f1132-ba5d-42b4-951d-44011ca46262'\n  );\n  const [categoryTitle, setCategoryTitle] = useState('');\n  const [isShowSelectList, setIsShowSelectList] = useState('false');\n\n  const lang = useSelector(getLang);\n  const { AddTransactionText, CommentText, AddText, CancelText } =\n    langOptionsModalAddTransaction;\n\n  // const toggleShowSelectList = () =>\n  //   setIsShowSelectList(isShowSelectList => !isShowSelectList);\n\n  // console.log(balance);\n  // const total = 10;\n  useEffect(() => {\n    // show();\n    dispatch(fetchTransactionCategories());\n    const closeByEscape = ({ code }) => {\n      if (code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', closeByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeByEscape);\n    };\n  }, [closeModal, dispatch]);\n\n  const closeByBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  // -----------------добавление и прочее\n\n  const onAddTransaction = transaction => {\n    dispatch(addTransaction({ ...transaction }));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      // case 'toggle':\n      //   setToggle(value);\n      //   break;\n      case 'amount':\n        setAmount(value);\n\n        break;\n      case 'transactionDate':\n        setTransactionDate(value);\n        break;\n      case 'comment':\n        setComment(value);\n        break;\n      case 'categoryId':\n        setCategoryId(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    //если баланс = 3000\n\n    if (isShowSelect) {\n      // if (total - amount < 0)\n      if (amount > balance) {\n        return alert('Сумма больше, чем баланс. Введите нужную сумму');\n      }\n      const amount1 = -amount;\n      console.log(amount1);\n      onAddTransaction({\n        type,\n        categoryId,\n        amount: amount1,\n        transactionDate,\n        comment,\n      });\n      resetForm();\n      dispatch(authOperations.fetchCurrentUser());\n      return;\n    }\n\n    onAddTransaction({\n      type,\n      categoryId,\n      amount,\n      transactionDate,\n      comment,\n    });\n    dispatch(authOperations.fetchCurrentUser());\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setAmount('');\n    setComment('');\n  };\n\n  const handleCheckBox = e => {\n    if (isShowSelect) {\n      console.log(5);\n      setType('INCOME');\n      setCategoryId('063f1132-ba5d-42b4-951d-44011ca46262');\n      console.log(type);\n      console.log(amount);\n      //  hide();\n    }\n\n    if (!isShowSelect) {\n      console.log(6);\n      setType('EXPENSE');\n      console.log(type);\n\n      // show();\n    }\n\n    toggleHook();\n  };\n\n  // const categoriesExpense = categories.filter(\n  //   category => category.type !== 'INCOME'\n  // );\n  //нужно и это в переменную?\n\n  const handleClickOption = e => {\n    console.log(e.currentTarget.value);\n    setCategoryId(e.currentTarget.value);\n    setIsShowSelectList(true);\n  };\n  // const handleChangeSelectInput = () => {\n  //   setIsShowSelectList(true);\n  // };\n\n  let inputProps = {\n    name: 'transactionDate',\n  };\n\n  return (\n    <>\n      <div className={css.Overlay} onClick={closeByBackdrop}>\n        <div className={css.Modal}>\n          <h2 className={cssForm.titleForm}>{AddTransactionText[lang]}</h2>\n\n          <form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className={cssForm.wraperSwitch}>\n              <label className={css.container}>\n                <input\n                  type=\"checkbox\"\n                  className={css.hiddenInput}\n                  id=\"hidden-input\"\n                  name=\"toggle\"\n                  // checked\n                  onClick={handleCheckBox}\n                />\n                <span className={css.thumbContainer}>\n                  <span className={css.thumb}></span>\n                </span>\n                <span className={css.track}></span>\n              </label>\n            </div>\n\n            {isShowSelect && (\n              <div className={cssForm.selectWraper}>\n                <ul className={cssForm.selectListWraper}>\n                  <input\n                    className={cssForm.selectCustom}\n                    name=\"categoryId\"\n                    type=\"button\"\n                    // type=\"hidden\"\n                    // onClick={handleSelectCustom}\n                    onClick={\n                      () => setIsShowSelectList(false)\n                      //toggleShowSelectList(true)\n                    }\n                    value={categoryTitle}\n                  />\n                  {!isShowSelectList && (\n                    <div className={cssForm.optionCustomWriper}>\n                      {categories\n                        .filter(category => category.type !== 'INCOME')\n                        .map(category => (\n                          <li\n                            key={`${category.id}`}\n                            // onClick={e => console.log(category.name)}\n                            onClick={() => setCategoryTitle(category.name)}\n                          >\n                            <label className={cssForm.selectLabel}>\n                              {`${category.name}`}\n                              <input\n                                className={cssForm.selectOptionItem}\n                                name=\"categoryId\"\n                                // type=\"hidden\"\n                                onClick={handleClickOption}\n                                onChange={handleChange}\n                                value={`${category.id}`}\n                              />\n                            </label>\n                          </li>\n                        ))}\n                    </div>\n                  )}\n                </ul>\n              </div>\n            )}\n\n            <div className={cssForm.wraperAmountDate}>\n              <label>\n                <input\n                  className={cssForm.inputAmount}\n                  name=\"amount\"\n                  // {if (isShowSelect) min}\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  value={amount}\n                  onChange={handleChange}\n                  // onChange={e => setAmount(e.target.value)}\n                />\n              </label>\n              {/* <label> */}\n              <Datetime\n                inputProps={inputProps}\n                value={valueDate}\n                onChange={onChange}\n                dateFormat=\"YYYY-MM-DD\"\n                timeFormat={false}\n                onClose={value => setTransactionDate(moment(value).format())}\n                closeOnSelect={true}\n                onNavigate={a => console.log(a)}\n                className={cssForm.inputDate}\n                name=\"transactionDate\"\n              />\n            </div>\n            <label className={cssForm.commentLabel}>\n              <input\n                className={cssForm.inputComment}\n                type=\"text\"\n                name=\"comment\"\n                placeholder={CommentText[lang]}\n                value={comment}\n                onChange={handleChange}\n                //onChange={e => setComment(e.target.value)}\n              />\n            </label>\n            {/* select my */}\n            <div className={cssForm.btnWraper}>\n              <button className={cssForm.btnAdd} type=\"submit\">\n                {AddText[lang]}\n              </button>\n              <button className={cssForm.btnCancel} type=\"submit\">\n                {CancelText[lang]}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nexport const useToggle = (initialState = false) => {\n  const [isShowSelect, setisShowSelect] = useState(initialState);\n\n  const show = () => setisShowSelect(true);\n  const hide = () => setisShowSelect(false);\n  const toggleHook = () => setisShowSelect(isShowSelect => !isShowSelect);\n\n  return {\n    isShowSelect,\n    show,\n    hide,\n    toggleHook,\n  };\n};\n","import {  useState } from 'react';\nimport { HomeTab } from 'components/HomeTab/HomeTab';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\n\nconst HomePage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      <HomeTab />\n      <ButtonAddTransactions onModalOpen={openModal} />\n      {isModalOpen && <ModalAddTransaction closeModal={closeModal} />}\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["selectTransactionCategories","state","transactionCategories","items","langOptionsHomeTab","ua","en","HomeTab","transactions","useSelector","selectTransactions","categoriesList","map","data","isMobile","useMedia","isLaptop","transactionsReverse","lang","getLang","DataText","TypeText","CategoryText","CommentText","SumText","BalanceText","NoTransactionsText","className","s","length","el","amount","transactionDate","type","find","cat","id","categoryId","name","comment","balanceAfter","ButtonAddTransactions","onModalOpen","onClick","langOptionsModalAddTransaction","ModalAddTransaction","closeModal","dispatch","useDispatch","categories","balance","authSelectors","initialState","useState","isShowSelect","setisShowSelect","toggleHook","show","hide","useToggle","setAmount","Date","valueDate","onChange","moment","format","setTransactionDate","setComment","setType","setCategoryId","categoryTitle","setCategoryTitle","isShowSelectList","setIsShowSelectList","AddTransactionText","AddText","CancelText","useEffect","fetchTransactionCategories","closeByEscape","code","window","addEventListener","removeEventListener","onAddTransaction","transaction","addTransaction","handleChange","e","target","value","resetForm","handleClickOption","console","log","currentTarget","css","event","cssForm","autoComplete","onSubmit","preventDefault","alert","amount1","authOperations","filter","category","min","placeholder","inputProps","dateFormat","timeFormat","onClose","closeOnSelect","onNavigate","a","isModalOpen","setIsModalOpen"],"sourceRoot":""}
{"version":3,"file":"static/js/683.775982ad.chunk.js","mappings":"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","sources":["../node_modules/react-chartjs-2/src/utils.ts","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["labels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","data","includes","push","cloneData","nextData","getDatasetAtEvent","event","getElementsAtEventForMode","nativeEvent","intersect","getElementAtEvent","getElementsAtEvent","ChartComponent","param","height","width","redraw","type","plugins","currentDataset","find","fallbackContent","updateMode","destroy","useEffect","config","setTimeout","update","canvas","dataset","role","Chart","forwardRef","createTypedChart","registerables","ref","register","Line","setOptions","LineController","Bar","value","map","nextDataset","BarController","Radar","RadarController","defaultDatasetIdKey","DoughnutController","current","reforwardRef","PolarArea","PolarAreaController","chart","nextOptions","Object","Scatter","assign","options","setLabels","currentData","nextLabels","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply","this","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","noop","uid","id","isNullOrUndef","toString","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","each","loopable","reverse","len","keys","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","create","klen","k","isValidKey","key","indexOf","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","v","x","y","resolveObjectKey","obj","resolver","parts","split","tmp","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","isNaN","epsilon","abs","_setMinAndMaxByKey","array","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","rest","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","c","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","_fullLoop","pointPosition","getPointPositionForValue","Element","useFinalPosition","getProps","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","ScatterController","getElement","abstract","DateAdapter","chartOptions","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","autoPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","rtlHelper","titleColor","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","textDirection","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","_element","afterInit","_args","afterDraw","_willRender","afterEvent","handleEvent","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}
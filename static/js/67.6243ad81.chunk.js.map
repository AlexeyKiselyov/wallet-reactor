{"version":3,"file":"static/js/67.6243ad81.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.js","assets/lang/langOptionsChart.js","components/Chart/Chart.jsx","helpers/switchBgStatistic.js","assets/lang/langOptionsStatisticTable.js","components/StatisticTable/StatisticTable.styled.js","components/StatisticTable/StatisticTable.jsx","components/DiagramTab/DiagramTab.styled.js","assets/lang/langOptionsDiagramTab.js","components/DiagramTab/DiagramTab.jsx","pages/DiagramPage/DiagramPage.jsx","redux/transactionSumController/transactionSumControllerSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ChartBalInfo = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  font-size: 18px;\n  line-height: calc(26 / 18);\n  font-weight: 700;\n`;\n","export const langOptionsChart = {\n  SelectPeriodText: {\n    ua: \"Виберiть перiод\",\n    en: \"Select period\",\n  },\n};\n","import { Chart as ChartJS, ArcElement, Tooltip } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { authSelectors } from 'redux/auth';\nimport { useSelector } from 'react-redux';\n\nimport { switchBgChart } from 'helpers/switchBgStatistic';\nimport { ChartWrapper, ChartBalInfo } from './Chart.styled';\nimport { getLang } from 'redux/lang/langSelector';\nimport { langOptionsChart } from '../../assets/lang/langOptionsChart';\nimport { getTheme } from '../../redux/theme/themeSelector';\n\nChartJS.register(ArcElement, Tooltip);\n\nexport const Chart = ({ trSummary }) => {\n  const name = trSummary.map(sum => sum.name);\n  const total = trSummary.map(sum => sum.total);\n  const colors = name.map(sum => switchBgChart(sum));\n  const lang = useSelector(getLang);\n  const { SelectPeriodText } = langOptionsChart;\n  const theme = useSelector(getTheme);\n\n  const options = {\n    cutout: '65%',\n  };\n\n  const initialData = {\n    labels: ['No trasactions'],\n    datasets: [\n      {\n        label: '# of Votes',\n        data: [1],\n        backgroundColor: ['#a6a6a6'],\n        borderColor: ['transparent'],\n      },\n    ],\n  };\n\n  const data = {\n    labels: name,\n    datasets: [\n      {\n        label: '# of Votes',\n        data: total,\n        backgroundColor: colors,\n        borderColor: ['transparent'],\n      },\n    ],\n  };\n\n  const balance = useSelector(authSelectors.selectBalance);\n\n  return (\n    <ChartWrapper>\n      {trSummary.length > 0 ? (\n        <Doughnut\n          redraw={true}\n          options={options}\n          data={data}\n          height=\"288px\"\n          width=\"288px\"\n        />\n      ) : (\n        <Doughnut\n          redraw={true}\n          options={options}\n          data={initialData}\n          height=\"288px\"\n          width=\"288px\"\n        />\n      )}\n      {trSummary.length > 0 ? (\n        <ChartBalInfo>&#8372; {balance}.00</ChartBalInfo>\n      ) : (\n        <ChartBalInfo\n        style={{\n          color:\n            theme === 'light'\n              ? 'var(--title-black-color)'\n              : 'var(--text-white-color)',\n        }}\n        >{SelectPeriodText[lang]}</ChartBalInfo>\n      )}\n    </ChartWrapper>\n  );\n};\n","export const switchBgChart = name => {\n  switch (name) {\n    case 'Basic expenses':\n      return '#81E1FF';\n    case 'Products':\n      return '#FFD8D0';\n    case 'Car':\n      return '#FD9498';\n    case 'Self care':\n      return '#C5BAFF';\n    case 'Child care':\n      return '#6E78E8';\n    case 'Household products':\n      return '#4A56E2';\n    case 'Education':\n      return '#81E1FF';\n    case 'Leisure':\n      return '#24CCA7';\n    default:\n      return '#00AD84';\n  }\n};\n\nexport const switchBgStatistic = ({ name, theme: { colors } }) => {\n  switch (name) {\n    case 'Main expenses':\n      return colors.yellow;\n    case 'Products':\n      return colors.lReddy;\n    case 'Car':\n      return colors.reddy;\n    case 'Self care':\n      return colors.lPurple;\n    case 'Child care':\n      return colors.lBlue;\n    case 'Household products':\n      return colors.btBlue;\n    case 'Education':\n      return colors.lBlight;\n    case 'Leisure':\n      return colors.lGreen;\n    case 'Entertainment':\n      return colors.btPink;\n    case 'Other expenses':\n      return colors.green;\n    default:\n      return colors.btBlue;\n  }\n};\n","export const langOptionsStatisticTable = {\n  CategoryText: {\n    ua: \"Котагорiя\",\n    en: \"Category\",\n  },\n  SumText: {\n    ua: \"Сума\",\n    en: \"Sum\",\n  },\n  ExpansesText: {\n    ua: \"Витрати\",\n    en: \"Expanses\",\n  },\n  IncomesText: {\n    ua: \"Доходи\",\n    en: \"Incomes\",\n  },\n  MonthText: {\n    ua: \"Мiсяць\",\n    en: \"Month\",\n  },\n  YearText: {\n    ua: \"Рiк\",\n    en: \"Year\",\n  },\n  JanuaryText: {\n    ua: \"Ciчень\",\n    en: \"January\",\n  },\n  FebruaryText: {\n    ua: \"Лютий\",\n    en: \"February\",\n  },\n  MarchText: {\n    ua: \"Березень\",\n    en: \"March\",\n  },\n  AprilText: {\n    ua: \"Квiтень\",\n    en: \"April\",\n  },\n  MayText: {\n    ua: \"Травень\",\n    en: \"May\",\n  },\n  JuneText: {\n    ua: \"Червень\",\n    en: \"June\",\n  },\n  JulyText: {\n    ua: \"Липень\",\n    en: \"July\",\n  },\n  AugustText: {\n    ua: \"Серпень\",\n    en: \"August\",\n  },\n  SeptemberText: {\n    ua: \"Вересень\",\n    en: \"September\",\n  },\n  OctoberText: {\n    ua: \"Жовтень\",\n    en: \"October\",\n  },\n  NovemberText: {\n    ua: \"Листопад\",\n    en: \"November\",\n  },\n  DecemberText: {\n    ua: \"Грудень\",\n    en: \"December\",\n  },\n};\n","import styled from 'styled-components';\nimport { switchBgStatistic } from 'helpers/switchBgStatistic';\n\nexport const Box = styled.div`\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n  }\n`;\nexport const Wrapper = styled.div`\n  width: 100%;\n  max-width: 320px;\n  margin: 0 auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 46px;\n    margin-right: 0;\n    max-width: 715px;\n    max-height: 80vh;\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 2px;\n  }\n  &::-webkit-scrollbar-thumb {\n    border-radius: 2px;\n  }\n`;\n\nexport const TrSummaryWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 17px;\n\n  margin-top: 16px;\n`;\n\nexport const TrSummaryField = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\n\nexport const TrSummaryStr = styled.span`\n  font-weight: 700;\n  line-height: calc(24 / 16);\n`;\n\nexport const TrSummaryNum = styled.span`\n  font-weight: 700;\n  line-height: calc(24 / 16);\n  color: ${p => (p.red ? '#FF6596' : '#24CCA7')};\n`;\n\nexport const SelectWrap = styled.div`\n  @media screen and (max-width: 767px) {\n    display: block;\n  }\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const Select = styled.select`\n  appearance: none;\n  width: 160px;\n  height: 50px;\n  border: 1px solid #000000;\n  border-radius: 30px;\n  padding: 12px 30px 14px 20px;\n  background-color: inherit;\n  outline: none;\n  cursor: pointer;\n  &::-ms-expand {\n    display: none;\n  }\n  @media screen and (max-width: 767px) {\n    width: 100%;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 182px;\n  }\n`;\n\nexport const customStylesSelect = (isMobile, darkTheme) => ({\n  control: styles => ({\n    ...styles,\n    backgroundColor: darkTheme ? '#e0e0e0' : 'inherit',\n    width: '100%',\n    height: '50px',\n    border: '1px solid #000000',\n    borderRadius: '30px',\n    boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n    paddingLeft: '10px',\n    paddingRight: '16px',\n\n    color: '#e0e0e0',\n    fill: 'blue',\n    fontFamily: 'Exo,  sans-serif',\n    fontWeight: `400`,\n    fontSize: `18`,\n    lineHeight: 1.5,\n    outline: 'none',\n    cursor: 'pointer',\n    marginBottom: isMobile ? '20px' : '0',\n    marginTop: isMobile ? '20px' : '0',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n\n    ':hover': {\n      borderColor: '#000000',\n    },\n  }),\n  container: styles => ({\n    ...styles,\n    flexGrow: '1',\n    ':first-of-type': {\n      marginRight: isMobile ? '0' : '20px',\n      flexGrow: '2',\n      flexShrink: '0',\n    },\n  }),\n  ValueContainer: styles => ({\n    ...styles,\n    paddingRight: '10px',\n  }),\n  indicatorSeparator: styles => ({\n    ...styles,\n    display: 'none',\n  }),\n\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => ({\n    ...styles,\n    height: '32px',\n    display: 'flex',\n    alignItems: 'center',\n    verticalAlign: 'center',\n    borderRadius: '15px',\n    padding: '15px',\n    backgroundColor: isDisabled\n      ? undefined\n      : isSelected\n      ? data.color\n      : isFocused\n      ? 'rgba(255, 255, 255, 0.5)'\n      : undefined,\n\n    color: isDisabled\n      ? '#ccc'\n      : isSelected\n      ? data.color\n      : isFocused\n      ? '#ff6596'\n      : undefined,\n\n    cursor: isDisabled ? 'not-allowed' : 'default',\n\n    ':active': {\n      ...styles[':active'],\n      backgroundColor: !isDisabled\n        ? isSelected\n          ? data.color\n          : 'rgba(255, 255, 255, 0.5)'\n        : undefined,\n    },\n    ':hover': {\n      color: '#ff6596',\n      background: 'rgba(255, 255, 255, 0.5)',\n    },\n    ':focus': {\n      color: '#ff6596',\n      background: 'rgba(255, 255, 255, 0.5)',\n    },\n  }),\n  menu: styles => ({\n    ...styles,\n    background: 'rgba(255, 255, 255, 0.8)',\n    boxShadow: '0px 6px 15px rgba(0, 0, 0, 0.1)',\n    backdropFilter: 'blur(25px)',\n    borderRadius: '15px',\n    zIndex: '1000000',\n  }),\n  menuList: styles => ({\n    ...styles,\n    overflow: 'hidden scroll',\n\n    '::-webkit-scrollbar': {\n      width: '4px',\n    },\n    '::-webkit-scrollbar-track': {\n      borderRadius: '2px',\n    },\n    '::-webkit-scrollbar-thumb': {\n      backgroundColor: '#24cca7',\n      borderRadius: ' 2px',\n    },\n  }),\n});\n\nexport const Table = styled.table`\n  max-width: 395px;\n  width: 100%;\n  border-collapse: collapse;\n  text-align: left;\n`;\n\nexport const TabHeader = styled.th`\n  background-color: #fff;\n  padding: 16px 20px 15px 20px;\n\n  &:first-child {\n    border-radius: 30px 0px 0px 30px;\n    margin-right: auto;\n  }\n  &:last-child {\n    border-radius: 0px 30px 30px 0px;\n    text-align: right;\n  }\n`;\n\nexport const Tabrow = styled.td`\n  padding: 16px 10px 15px 60px;\n  position: relative;\n\n  &:first-child::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 18px;\n    transform: translateY(-50%);\n    width: 24px;\n    height: 24px;\n    background-color: ${switchBgStatistic};\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    bottom: 0;\n    width: 100%;\n    border: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  }\n\n  &:last-child {\n    padding-right: 20px;\n    display: flex;\n    justify-content: right;\n  }\n`;\n\nexport const Total = styled.span`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px 10px 15px 20px;\n`;\n","import { useMedia } from 'react-use';\nimport Select from 'react-select';\n\nimport { getLang } from 'redux/lang/langSelector';\nimport { langOptionsStatisticTable } from '../../assets/lang/langOptionsStatisticTable';\nimport { useSelector } from 'react-redux';\nimport { getTheme } from '../../redux/theme/themeSelector';\n\nimport {\n  Box,\n  SelectWrap,\n  Table,\n  Wrapper,\n  TabHeader,\n  Tabrow,\n  TrSummaryNum,\n  TrSummaryWrap,\n  TrSummaryField,\n  TrSummaryStr,\n} from './StatisticTable.styled';\nimport { customStylesSelect } from './StatisticTable.styled';\n\nfunction generateArrayOfYears() {\n  const max = new Date().getFullYear();\n  const min = max - 4;\n  const years = [];\n\n  for (let i = max; i >= min; i--) {\n    years.push({\n      value: i,\n      label: i.toString(),\n    });\n  }\n  return years;\n}\n\nexport const StatisticTabel = ({\n  trSummary,\n  expenseSummary,\n  incomeSummary,\n  setYear,\n  setMonth,\n}) => {\n  const isMobile = useMedia('(max-width: 767px)');\n\n  const theme = useSelector(getTheme);\n  const darkTheme = theme === 'dark';\n  const lang = useSelector(getLang);\n  const {\n    CategoryText,\n    SumText,\n    ExpansesText,\n    IncomesText,\n    MonthText,\n    YearText,\n    JanuaryText,\n    FebruaryText,\n    MarchText,\n    AprilText,\n    MayText,\n    JuneText,\n    JulyText,\n    AugustText,\n    SeptemberText,\n    OctoberText,\n    NovemberText,\n    DecemberText,\n  } = langOptionsStatisticTable;\n\n  const dataMonth = [\n    { id: 0, label: JanuaryText[lang], value: '1' },\n    { id: 1, label: FebruaryText[lang], value: '2' },\n    { id: 2, label: MarchText[lang], value: '3' },\n    { id: 3, label: AprilText[lang], value: '4' },\n    { id: 4, label: MayText[lang], value: '5' },\n    { id: 5, label: JuneText[lang], value: '6' },\n    { id: 6, label: JulyText[lang], value: '7' },\n    { id: 7, label: AugustText[lang], value: '8' },\n    { id: 8, label: SeptemberText[lang], value: '9' },\n    { id: 9, label: OctoberText[lang], value: '10' },\n    { id: 10, label: NovemberText[lang], value: '11' },\n    { id: 11, label: DecemberText[lang], value: '12' },\n  ];\n\n  const selectOption = data =>\n    data.reduce((acc, item) => {\n      acc.push({\n        value: `${item.value}`,\n        label: `${item.label}`,\n      });\n\n      return acc;\n    }, []);\n\n  return (\n    <Box>\n      <SelectWrap>\n        <Select\n          name=\"month\"\n          placeholder={MonthText[lang]}\n          styles={customStylesSelect(isMobile, darkTheme)}\n          onChange={e => {\n            setMonth(e.value);\n          }}\n          options={selectOption(dataMonth)}\n        ></Select>\n\n        <Select\n          name=\"year\"\n          placeholder={YearText[lang]}\n          styles={customStylesSelect(isMobile, darkTheme)}\n          onChange={e => {\n            setYear(e.value);\n          }}\n          options={selectOption(generateArrayOfYears())}\n        ></Select>\n      </SelectWrap>\n\n      <Wrapper>\n        <Table>\n          <thead>\n            <tr>\n              <TabHeader\n                style={{\n                  backgroundColor:\n                    theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                  color:\n                    theme === 'light'\n                      ? 'var(--title-black-color)'\n                      : 'var(--text-white-color)',\n                }}\n              >\n                {CategoryText[lang]}\n              </TabHeader>\n              <TabHeader\n                style={{\n                  backgroundColor:\n                    theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                  color:\n                    theme === 'light'\n                      ? 'var(--title-black-color)'\n                      : 'var(--text-white-color)',\n                }}\n              >\n                {SumText[lang]}\n              </TabHeader>\n            </tr>\n          </thead>\n          <tbody>\n            {trSummary.reduce((acc, { name, total, type }) => {\n              if (type !== 'INCOME') {\n                acc.push(\n                  <tr key={name} type={type}>\n                    <Tabrow name={name}>{name}</Tabrow>\n                    <Tabrow>{Math.abs(total).toFixed(2)}</Tabrow>\n                  </tr>\n                );\n              }\n              return acc;\n            }, [])}\n          </tbody>\n        </Table>\n        <TrSummaryWrap>\n          <TrSummaryField>\n            <TrSummaryStr\n              style={{\n                color:\n                  theme === 'light'\n                    ? 'var(--title-black-color)'\n                    : 'var(--text-white-color)',\n              }}\n            >\n              {ExpansesText[lang]}:{' '}\n            </TrSummaryStr>\n            <TrSummaryNum red>\n              {Math.abs(expenseSummary).toFixed(2)}\n            </TrSummaryNum>\n          </TrSummaryField>\n          <TrSummaryField>\n            <TrSummaryStr\n              style={{\n                color:\n                  theme === 'light'\n                    ? 'var(--title-black-color)'\n                    : 'var(--text-white-color)',\n              }}\n            >\n              {IncomesText[lang]}:{' '}\n            </TrSummaryStr>\n            <TrSummaryNum>{Math.abs(incomeSummary).toFixed(2)}</TrSummaryNum>\n          </TrSummaryField>\n        </TrSummaryWrap>\n      </Wrapper>\n    </Box>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  line-height: 1.5;\n`;\n\nexport const Wrapper = styled.div`\n  padding-top: 43px;\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n    max-width: 300px;\n  }\n  @media screen and (min-width: 768px) {\n    padding: 10px 0 10px;\n    padding-top: 30px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding-top: 128px;\n    padding: 31px 15px 10px 68px;\n  }\n`;\n\nexport const Box = styled.div`\n  display: block;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    gap: 32px;\n  }\n`;\n\nexport const ChartBox = styled.div`\n  width: 288px;\n  min-height: 200px;\n  flex-shrink: 0;\n`;\n","export const langOptionsDiagramTab = {\n  StatisticsText: {\n    ua: \"Статистика\",\n    en: \"Statistics\",\n  },\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Chart } from 'components/Chart/Chart';\nimport { getTransactionsSummary } from 'redux/transactionSumController/transactionSumControllerOperations';\nimport {\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectTrSummary,\n} from 'redux/transactionSumController/transactionSumControllerSelectors';\n\nimport { StatisticTabel } from 'components/StatisticTable/StatisticTable';\nimport { ChartBox, Box, Title, Wrapper } from './DiagramTab.styled';\n\nimport { getLang } from \"redux/lang/langSelector\";\nimport { langOptionsDiagramTab } from '../../assets/lang/langOptionsDiagramTab';\nimport { getTheme } from '../../redux/theme/themeSelector';\n\nexport const DiagramTab = () => {\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n\n  const trSummary = useSelector(selectTrSummary);\n  const expenseSummary = useSelector(selectExpenseSummary);\n  const incomeSummary = useSelector(selectIncomeSummary);\n  const dispatch = useDispatch();\n\n  const lang = useSelector(getLang);\n  const { StatisticsText, } = langOptionsDiagramTab;\n  const theme = useSelector(getTheme);\n\n  useEffect(() => {\n    const fetchTransactionsSummary = ({ month, year }) => {\n      dispatch(getTransactionsSummary({ month, year }));\n    };\n\n    if (month && year) {\n      fetchTransactionsSummary({ month, year });\n    }\n  }, [month, year, dispatch]);\n\n  return (\n    <Wrapper>\n      <Title\n      style={{\n        color: theme === 'light' ? 'var(--title-black-color)' : 'var(--text-white-color)',\n      }}\n      >{StatisticsText[lang]}</Title>\n      <Box>\n        <ChartBox>{<Chart trSummary={trSummary} />}</ChartBox>\n        <StatisticTabel\n          setYear={setYear}\n          setMonth={setMonth}\n          trSummary={trSummary}\n          expenseSummary={expenseSummary}\n          incomeSummary={incomeSummary}\n        />\n      </Box>\n    </Wrapper>\n  );\n};\n","import { DiagramTab } from 'components/DiagramTab/DiagramTab';\n\nconst DiagramPage = () => {\n  return <DiagramTab />;\n};\n\nexport default DiagramPage;\n","export const selectTrSummary = state => state.trSummary.summary;\nexport const selectIsLoading = state => state.trSummary.isLoading;\nexport const selectError = state => state.trSummary.error;\nexport const selectExpenseSummary = state => state.trSummary.expenseSummary;\nexport const selectIncomeSummary = state => state.trSummary.incomeSummary;\n"],"names":["ChartWrapper","styled","ChartBalInfo","langOptionsChart","ua","en","ChartJS","ArcElement","Tooltip","Chart","trSummary","name","map","sum","total","colors","switchBgChart","lang","useSelector","getLang","SelectPeriodText","theme","getTheme","options","cutout","data","labels","datasets","label","backgroundColor","borderColor","balance","authSelectors","length","redraw","height","width","style","color","langOptionsStatisticTable","Box","Wrapper","TrSummaryWrap","TrSummaryField","TrSummaryStr","TrSummaryNum","p","red","SelectWrap","customStylesSelect","isMobile","darkTheme","control","styles","border","borderRadius","boxShadow","paddingLeft","paddingRight","fill","fontFamily","fontWeight","fontSize","lineHeight","outline","cursor","marginBottom","marginTop","display","alignItems","justifyContent","container","flexGrow","marginRight","flexShrink","ValueContainer","indicatorSeparator","option","isDisabled","isFocused","isSelected","verticalAlign","padding","undefined","background","menu","backdropFilter","zIndex","menuList","overflow","Table","TabHeader","Tabrow","yellow","lReddy","reddy","lPurple","lBlue","btBlue","lBlight","lGreen","btPink","green","generateArrayOfYears","max","Date","getFullYear","min","years","i","push","value","toString","StatisticTabel","expenseSummary","incomeSummary","setYear","setMonth","useMedia","CategoryText","SumText","ExpansesText","IncomesText","MonthText","YearText","FebruaryText","MarchText","AprilText","MayText","JuneText","JulyText","AugustText","SeptemberText","OctoberText","NovemberText","DecemberText","dataMonth","id","selectOption","reduce","acc","item","placeholder","onChange","e","type","Math","abs","toFixed","Title","ChartBox","langOptionsDiagramTab","DiagramTab","useState","month","year","selectTrSummary","selectExpenseSummary","selectIncomeSummary","dispatch","useDispatch","StatisticsText","useEffect","getTransactionsSummary","fetchTransactionsSummary","state","summary","selectError","error"],"sourceRoot":""}
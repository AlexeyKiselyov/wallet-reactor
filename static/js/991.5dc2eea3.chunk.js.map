{"version":3,"file":"static/js/991.5dc2eea3.chunk.js","mappings":"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","sources":["webpack://wallet-reactor/./src/components/HomeTab/HomeTab.module.scss?60d0","redux/transactionCategories/transactionCategoriesSelectors.js","assets/lang/langOptionsHomeTab.js","components/HomeTab/HomeTab.jsx","webpack://wallet-reactor/./src/components/ButtonAddTransactions/ButtonAddTransactions.module.scss?2b0c","components/ButtonAddTransactions/ButtonAddTransactions.jsx","helpers/formatDate.js","hook/modalAddTransaction.js","webpack://wallet-reactor/./src/components/ModalAddTransaction/ModalAddTransaction.module.scss?a1ea","webpack://wallet-reactor/./src/components/ModalAddTransaction/FormAddTransaction.module.scss?e07b","components/ModalAddTransaction/ModalAddTransaction.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"tableWrap\":\"HomeTab_tableWrap__wldLt\",\"scrollTableBody\":\"HomeTab_scrollTableBody__k4rOg\",\"scrollTable\":\"HomeTab_scrollTable__e2cbs\",\"tableWrapMob\":\"HomeTab_tableWrapMob__7DKqt\",\"scrollTableBodyMob\":\"HomeTab_scrollTableBodyMob__+X8ln\",\"scrollTableMob\":\"HomeTab_scrollTableMob__avbAf\",\"tablePositive\":\"HomeTab_tablePositive__06bCy\",\"positive\":\"HomeTab_positive__mmZ63\",\"negative\":\"HomeTab_negative__pTkgl\",\"scrollTableBtn\":\"HomeTab_scrollTableBtn__n5d6c\",\"scrollTableBtnMob\":\"HomeTab_scrollTableBtnMob__gvIkC\"};","export const selectTransactionCategories = state =>\n  state.transactionCategories.items;\nexport const selectTransactionIsLoading = state =>\n  state.transactionCategories.isLoading;\n","export const langOptionsHomeTab = {\n  DataText: {\n    ua: \"Дата\",\n    en: \"Data\",\n  },\n  TypeText: {\n    ua: \"Тип\",\n    en: \"Type\",\n  },\n  CategoryText: {\n    ua: \"Категорiя\",\n    en: \"Category\",\n  },\n  CommentText: {\n    ua: \"Коментар\",\n    en: \"Comment\",\n  },\n  SumText: {\n    ua: \"Сума\",\n    en: \"Sum\",\n  },\n  BalanceText: {\n    ua: \"Баланс\",\n    en: \"Balance\",\n  },\n  NoTransactionsText: {\n    ua: \"Немає транзакцiй\",\n    en: \"No transactions\",\n  },\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport s from './HomeTab.module.scss';\nimport { selectTransactions } from 'redux/transactions/transactionsSelectors';\nimport { useMedia } from 'react-use';\nimport { selectTransactionCategories } from 'redux/transactionCategories/transactionCategoriesSelectors';\nimport { getLang } from 'redux/lang/langSelector';\nimport { langOptionsHomeTab } from '../../assets/lang/langOptionsHomeTab';\nimport { getTheme } from '../../redux/theme/themeSelector';\nimport { BsFillTrashFill } from 'react-icons/bs';\nimport { deleteTransaction } from 'redux/transactions/transactionsOperations';\nimport { changeBalance } from 'redux/auth/auth-slice';\n\nexport const HomeTab = () => {\n  const transactions = useSelector(selectTransactions);\n  const categories = useSelector(selectTransactionCategories);\n  const categoriesList = categories.map(data => data);\n  const isMobile = useMedia('(max-width: 767px)');\n  const isLaptop = useMedia('(min-width: 768px)');\n  const transactionsReverse = [...transactions];\n  const dispatch = useDispatch();\n\n  const lang = useSelector(getLang);\n  const {\n    DataText,\n    TypeText,\n    CategoryText,\n    CommentText,\n    SumText,\n    BalanceText,\n    NoTransactionsText,\n  } = langOptionsHomeTab;\n  const theme = useSelector(getTheme);\n\n  const onDelete = (id, amount) => {\n    dispatch(deleteTransaction(id));\n    dispatch(changeBalance(amount));\n  };\n\n  return (\n    <>\n      {isMobile && (\n        <div className={s.tableWrapMob}>\n          <div className={s.scrollTableMob}>\n            <div className={s.scrollTableBodyMob}>\n              {transactions.length !== 0 ? (\n                transactionsReverse\n                  .reverse()\n                  .sort(\n                    (a, b) =>\n                      new Date(b.transactionDate) - new Date(a.transactionDate)\n                  )\n                  .map(el => (\n                    <table\n                      className={\n                        el.amount > 0 ? s.tablePositive : s.tableNegative\n                      }\n                      key={el.id}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {DataText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {el.transactionDate}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {TypeText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {el.type !== 'EXPENSE' ? '+' : '-'}\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {CategoryText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {categoriesList.length &&\n                              categoriesList.find(\n                                cat => cat.id === el.categoryId\n                              ).name}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {CommentText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {el.comment}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {SumText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                            className={el.amount > 0 ? s.positive : s.negative}\n                          >\n                            {el.amount}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {BalanceText[lang]}\n                          </td>\n                          <td\n                            style={{\n                              backgroundColor:\n                                theme === 'light'\n                                  ? ''\n                                  : 'var(--dark-mood-form-color)',\n                            }}\n                          >\n                            {el.balanceAfter}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td colspan=\"2\">\n                            <button\n                              type=\"button\"\n                              className={s.scrollTableBtnMob}\n                              onClick={() => onDelete(el.id)}\n                            >\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  ))\n              ) : (\n                <p>{NoTransactionsText[lang]}</p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {isLaptop && (\n        <div className={s.tableWrap}>\n          <div className={s.scrollTable}>\n            <table>\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {DataText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {TypeText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {CategoryText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {CommentText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {SumText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  >\n                    {BalanceText[lang]}\n                  </th>\n                  <th\n                    style={{\n                      backgroundColor:\n                        theme === 'light' ? '' : 'var(--dark-mood-form-color)',\n                      color:\n                        theme === 'light'\n                          ? 'var(--title-black-color)'\n                          : 'var(--text-white-color)',\n                    }}\n                  ></th>\n                </tr>\n              </thead>\n            </table>\n\n            <div className={s.scrollTableBody}>\n              <table>\n                <tbody>\n                  {transactions.length ? (\n                    transactionsReverse\n                      .reverse()\n                      .sort(\n                        (a, b) =>\n                          new Date(b.transactionDate) -\n                          new Date(a.transactionDate)\n                      )\n                      .map(el => (\n                        <tr key={el.id}>\n                          <td>{el.transactionDate}</td>\n                          <td>{el.type !== 'EXPENSE' ? '+' : '-'}</td>\n                          <td>\n                            {categoriesList.length &&\n                              categoriesList.find(\n                                cat => cat.id === el.categoryId\n                              ).name}\n                          </td>\n                          <td>{el.comment}</td>\n                          <td\n                            className={el.amount > 0 ? s.positive : s.negative}\n                          >\n                            {el.amount}\n                          </td>\n                          <td>{el.balanceAfter}</td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              onClick={() => onDelete(el.id, el.amount)}\n                              className={s.scrollTableBtn}\n                            >\n                              <BsFillTrashFill style={{ fill: '#fff' }} />\n                            </button>\n                          </td>\n                        </tr>\n                      ))\n                  ) : (\n                    <tr>\n                      <td>{NoTransactionsText[lang]}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btnAddTransaction\":\"ButtonAddTransactions_btnAddTransaction__+CJj6\"};","import css from './ButtonAddTransactions.module.scss';\nexport const ButtonAddTransactions = ({ onModalOpen }) => {\n  return (\n    <>\n      <button\n        className={css.btnAddTransaction}\n        onClick={onModalOpen}\n        type=\"button\"\n      ></button>\n    </>\n  );\n};\n","export function formatDate(date) {\n  let d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n","import { useState } from 'react';\n\nexport const useToggle = () => {\n  const [isShowSelect, setisShowSelect] = useState(false);\n\n  const show = () => setisShowSelect(true);\n  const hide = () => setisShowSelect(false);\n  const toggleHook = () => setisShowSelect(isShowSelect => !isShowSelect);\n\n  return {\n    isShowSelect,\n    show,\n    hide,\n    toggleHook,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Overlay\":\"ModalAddTransaction_Overlay__vLRSS\",\"Modal\":\"ModalAddTransaction_Modal__TxV0p\",\"btnClose\":\"ModalAddTransaction_btnClose__mAiFV\",\"loadedBloc\":\"ModalAddTransaction_loadedBloc__HOgXM\",\"loadedNone\":\"ModalAddTransaction_loadedNone__ufcKr\",\"titleForm\":\"ModalAddTransaction_titleForm__zGvYK\",\"wraperBtnSpan\":\"ModalAddTransaction_wraperBtnSpan__lGDF5\",\"spanText\":\"ModalAddTransaction_spanText__6SaXA\",\"spanTextActive\":\"ModalAddTransaction_spanTextActive__QANdl\",\"spanTextGreen\":\"ModalAddTransaction_spanTextGreen__q8ThF\",\"wraperSwitch\":\"ModalAddTransaction_wraperSwitch__cw+un\",\"container\":\"ModalAddTransaction_container__ctH3d\",\"hiddenInput\":\"ModalAddTransaction_hiddenInput__5li1C\",\"thumbContainer\":\"ModalAddTransaction_thumbContainer__vmn7-\",\"thumb\":\"ModalAddTransaction_thumb__m-wAw\",\"track\":\"ModalAddTransaction_track__ssBX2\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectType\":\"FormAddTransaction_selectType__cZDI0\",\"selectWraper\":\"FormAddTransaction_selectWraper__qzymS\",\"selectCustom\":\"FormAddTransaction_selectCustom__6vGV2\",\"optionCustomWriper\":\"FormAddTransaction_optionCustomWriper__DvYLe\",\"selectLabel\":\"FormAddTransaction_selectLabel__RbdGb\",\"selectOptionItem\":\"FormAddTransaction_selectOptionItem__azR2X\",\"wraperAmountDate\":\"FormAddTransaction_wraperAmountDate__OOS4P\",\"inputAmount\":\"FormAddTransaction_inputAmount__63lHt\",\"inputDate\":\"FormAddTransaction_inputDate__tfEr3\",\"commentLabel\":\"FormAddTransaction_commentLabel__sShDm\",\"inputComment\":\"FormAddTransaction_inputComment__o60CH\",\"btnWraper\":\"FormAddTransaction_btnWraper__+vpSj\",\"btnAdd\":\"FormAddTransaction_btnAdd__2bF93\",\"btnCancel\":\"FormAddTransaction_btnCancel__L90Nx\"};","//import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\nimport Datetime from 'react-datetime';\nimport 'react-datetime/css/react-datetime.css';\n\nimport { addTransaction } from 'redux/transactions/transactionsOperations';\nimport { selectTransactionCategories } from 'redux/transactionCategories/transactionCategoriesSelectors';\nimport { selectBalance } from 'redux/auth/auth-selectors';\nimport { changeBalance } from 'redux/auth/auth-slice';\nimport { formatDate } from 'helpers/formatDate';\nimport { useToggle } from '../../hook/modalAddTransaction';\n\nimport css from './ModalAddTransaction.module.scss';\nimport cssForm from './FormAddTransaction.module.scss';\n\nexport const ModalAddTransaction = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const categories = useSelector(selectTransactionCategories);\n  const balance = useSelector(selectBalance);\n  const { isShowSelect, toggleHook } = useToggle();\n\n  const [amount, setAmount] = useState('');\n  const [valueDate, onChange] = useState(new Date());\n  const [transactionDate, setTransactionDate] = useState(\n    formatDate(moment(valueDate).format())\n  );\n  const [comment, setComment] = useState('');\n  const [type, setType] = useState('INCOME');\n  const [categoryId, setCategoryId] = useState(\n    '063f1132-ba5d-42b4-951d-44011ca46262'\n  );\n  const [categoryTitle, setCategoryTitle] = useState('');\n  const [isShowSelectList, setIsShowSelectList] = useState('false');\n\n  useEffect(() => {\n    const closeByEscape = ({ code }) => {\n      if (code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', closeByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', closeByEscape);\n    };\n  }, [closeModal, dispatch]);\n\n  const closeByBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      closeModal();\n    }\n  };\n\n  const onAddTransaction = transaction => {\n    dispatch(addTransaction({ ...transaction }));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'amount':\n        setAmount(value);\n\n        break;\n      case 'transactionDate':\n        setTransactionDate(value);\n        break;\n      case 'comment':\n        setComment(value);\n        break;\n      case 'categoryId':\n        setCategoryId(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const amountNegative = -amount;\n\n    if (isShowSelect) {\n      if (amount > balance) {\n        return alert('Сумма больше, чем баланс. Введите нужную сумму');\n      }\n      onAddTransaction({\n        type,\n        categoryId,\n        amount: amountNegative,\n        transactionDate,\n        comment,\n      });\n      dispatch(changeBalance(amount));\n      resetForm();\n\n      return;\n    }\n\n    onAddTransaction({\n      type,\n      categoryId,\n      amount,\n      transactionDate,\n      comment,\n    });\n\n    dispatch(changeBalance(amountNegative));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setAmount('');\n    setComment('');\n  };\n\n  const handleCheckBox = e => {\n    if (isShowSelect) {\n      setType('INCOME');\n      setCategoryId('063f1132-ba5d-42b4-951d-44011ca46262');\n    }\n\n    if (!isShowSelect) {\n      setType('EXPENSE');\n    }\n\n    toggleHook();\n  };\n\n  const handleClickOption = e => {\n    console.log(e.currentTarget.value);\n    setCategoryId(e.currentTarget.value);\n    setIsShowSelectList(true);\n  };\n\n  return (\n    <>\n      <div className={css.Overlay} onClick={closeByBackdrop}>\n        <div className={css.Modal}>\n          <h2 className={css.titleForm}>Add transaction</h2>\n\n          <form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <div className={css.wraperBtnSpan}>\n              <span className={isShowSelect ? css.spanText : css.spanTextGreen}>\n                Income\n              </span>\n              <div className={css.wraperSwitch}>\n                <label className={css.container}>\n                  <input\n                    type=\"checkbox\"\n                    className={css.hiddenInput}\n                    id=\"hidden-input\"\n                    name=\"toggle\"\n                    // checked\n                    onClick={handleCheckBox}\n                  />\n                  <span className={css.thumbContainer}>\n                    <span className={css.thumb}></span>\n                  </span>\n                  <span className={css.track}></span>\n                </label>\n              </div>\n              <span\n                className={!isShowSelect ? css.spanText : css.spanTextActive}\n              >\n                Expense\n              </span>\n            </div>\n\n            {isShowSelect && (\n              <div className={cssForm.selectWraper}>\n                <ul className={cssForm.selectListWraper}>\n                  <label>\n                    <input\n                      className={cssForm.selectCustom}\n                      name=\"categoryId\"\n                      type=\"text\"\n                      placeholder=\"Select a category\"\n                      onClick={() => setIsShowSelectList(false)}\n                      value={categoryTitle}\n                    />\n                  </label>\n                  {!isShowSelectList && (\n                    <div className={cssForm.optionCustomWriper}>\n                      {categories\n                        .filter(category => category.type !== 'INCOME')\n                        .map(category => (\n                          <li\n                            key={`${category.id}`}\n                            onClick={() => setCategoryTitle(category.name)}\n                          >\n                            <label className={cssForm.selectLabel}>\n                              {`${category.name}`}\n                              <input\n                                className={cssForm.selectOptionItem}\n                                name=\"categoryId\"\n                                onClick={handleClickOption}\n                                onChange={handleChange}\n                                value={`${category.id}`}\n                              />\n                            </label>\n                          </li>\n                        ))}\n                    </div>\n                  )}\n                </ul>\n              </div>\n            )}\n\n            <div className={cssForm.wraperAmountDate}>\n              <label>\n                <input\n                  className={cssForm.inputAmount}\n                  name=\"amount\"\n                  type=\"number\"\n                  min=\"0\"\n                  placeholder=\"0.00\"\n                  value={amount}\n                  onChange={handleChange}\n                />\n              </label>\n\n              <div className={cssForm.dateTimeWriper}>\n                <Datetime\n                  className={cssForm.inputDate}\n                  name=\"transactionDate\"\n                  value={valueDate}\n                  onChange={onChange}\n                  dateFormat=\"YYYY-MM-DD\"\n                  timeFormat={false}\n                  onClose={value =>\n                    setTransactionDate(formatDate(moment(value).format()))\n                  }\n                  closeOnSelect={true}\n                />\n              </div>\n            </div>\n            <label className={cssForm.commentLabel}>\n              <input\n                className={cssForm.inputComment}\n                type=\"text\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                value={comment}\n                onChange={handleChange}\n              />\n            </label>\n\n            <div className={cssForm.btnWraper}>\n              <button\n                className={cssForm.btnAdd}\n                onClick={handleSubmit}\n                type=\"submit\"\n              >\n                ADD\n              </button>\n              <button\n                className={cssForm.btnCancel}\n                onClick={closeModal}\n                type=\"button\"\n              >\n                CANCEL\n              </button>\n              <button\n                className={css.btnClose}\n                onClick={closeModal}\n                type=\"button\"\n              ></button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {  useState } from 'react';\nimport { HomeTab } from 'components/HomeTab/HomeTab';\nimport { ButtonAddTransactions } from 'components/ButtonAddTransactions/ButtonAddTransactions';\nimport { ModalAddTransaction } from 'components/ModalAddTransaction/ModalAddTransaction';\n\nconst HomePage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      <HomeTab />\n      <ButtonAddTransactions onModalOpen={openModal} />\n      {isModalOpen && <ModalAddTransaction closeModal={closeModal} />}\n    </>\n  );\n};\nexport default HomePage;\n"],"names":["selectTransactionCategories","state","transactionCategories","items","langOptionsHomeTab","ua","en","HomeTab","transactions","useSelector","selectTransactions","categoriesList","map","data","isMobile","useMedia","isLaptop","transactionsReverse","dispatch","useDispatch","lang","getLang","DataText","TypeText","CategoryText","CommentText","SumText","BalanceText","NoTransactionsText","theme","getTheme","onDelete","id","amount","deleteTransaction","changeBalance","className","s","length","reverse","sort","a","b","Date","transactionDate","el","style","backgroundColor","type","find","cat","categoryId","name","comment","balanceAfter","colspan","onClick","color","fill","ButtonAddTransactions","onModalOpen","css","formatDate","date","d","month","getMonth","day","getDate","year","getFullYear","join","ModalAddTransaction","closeModal","categories","balance","selectBalance","useState","isShowSelect","setisShowSelect","show","hide","toggleHook","useToggle","setAmount","valueDate","onChange","moment","format","setTransactionDate","setComment","setType","setCategoryId","categoryTitle","setCategoryTitle","isShowSelectList","setIsShowSelectList","useEffect","closeByEscape","code","window","addEventListener","removeEventListener","onAddTransaction","transaction","addTransaction","handleChange","e","target","value","handleSubmit","preventDefault","amountNegative","alert","resetForm","handleClickOption","console","log","currentTarget","event","autoComplete","onSubmit","cssForm","placeholder","filter","category","min","dateFormat","timeFormat","onClose","closeOnSelect","isModalOpen","setIsModalOpen"],"sourceRoot":""}